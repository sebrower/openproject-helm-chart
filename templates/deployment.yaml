apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openproject.fullname" . }}
  labels:
    {{- include "openproject.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openproject.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openproject.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openproject.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: opdata
          persistentVolumeClaim:
            claimName: opdata
      containers:
        - name: "{{ .Chart.Name }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "openProject.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "DATABASE_URL"
              # using 'postgres' as db for now since I don't know why setting the 'database' in the postgres value doesn't create the db
              value: "postgresql://{{ include "openproject.databaseUser" . }}:{{ include "openproject.databasePassword" .}}@{{ include "openproject.databaseHost" . }}:{{ include "openproject.databasePort" . }}/{{ include "openproject.databaseName" . }}"
            - name: "RAILS_CACHE_STORE"
              value: "memcache"
            - name: "CACHE_MEMCACHE_SERVER"
              value: "openproject-memcached.openproject.svc.cluster.local"
            - name: "OPENPROJECT_HTTPS"
              value: "{{ .Values.ingress.tls }}"
            - name: "OPENPROJECT_HOST__NAME"
              value: "{{ .Values.ingress.host }}"
          volumeMounts:
            - name: opdata
              mountPath: /var/openproject/assets
          ports:
            - name: http
              containerPort: {{ .Values.containerPorts.http }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health_check
              port: 8080
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /health_check
              port: 8080
            initialDelaySeconds: 120
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
